{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBountary.js","Containers/App.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","height","overflowY","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","sarchField","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,yBAAKC,UAAU,mDACX,yBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,6BACI,4BAAKL,GACL,uBAAGG,UAAU,gCAAgCF,MCQ9CK,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEQA,EAAOC,KAAI,SAAAC,GACP,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAKP,GAAIA,GAAIO,EAAKP,GAAIF,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,aCO1EU,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKV,UAAU,OACX,2BACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCQXI,G,MAdA,SAACC,GAOZ,OACI,yBAAKhB,GAAG,SAASiB,MANP,CACVC,OAAQ,OACRC,UAAW,WAKNH,EAAMI,YCYJC,E,kDApBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,wDAEAG,KAAKV,MAAMI,a,GAjBHQ,aC6CZC,G,wDAvCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTjB,OAAQ,GACRK,YAAa,KAJP,E,gEAQO,IAAD,OAChBwB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,+BAOrC,IAAD,EAC2BZ,KAAKJ,MAA7BjB,EADH,EACGA,OAAQK,EADX,EACWA,YACV6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,oBAAoBC,SAASjC,EAAYgC,wBAE/D,OAAQrC,EAAOuC,OAGP,yBAAK3C,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAW4C,WAAYnC,EAAaC,aAAce,KAAKI,iBACvD,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUzB,OAAQkC,OAPlC,wBAAItC,UAAU,MAAd,e,GAzBM2B,c,MCAlBkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.390e00e3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='bg-light-green tc dib br3 pa3 ma2 grow shadow-5'>\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\n            <div>\n                <h2>{name}</h2>\n                <p className='underline-hover grow pointer'>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map(user => { \n                    return <Card key={user.id} id={user.id} name={user.name} email={user.email} />\n                })\n            }\n        </div>\n    );\n}\n\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type=\"search\"\n                placeholder=\"Search Robots\" \n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props) => {\n\n    const style = {\n        height: '60vh',\n        overflowY: 'scroll'\n    };\n\n    return (\n        <div id='scroll' style={style}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;\n\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Ooops. This is not good!</h1>\n        } else {\n            return this.props.children;\n        }\n    }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll.js';\nimport ErrorBoundry from '../Components/ErrorBountary';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchField: ' '\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchField: event.target.value });\n    }\n\n    render() {\n        const { robots, searchField } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase());\n        });\n        return !robots.length ?\n            <h1 className='tc'>Loading</h1> :\n            (\n                <div className='tc' >\n                    <h1 className='f2'>RoboFriends</h1>\n                    <SearchBox sarchField={searchField} searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport 'tachyons';\n// import * as serviceWorker from './serviceWorker';1\n\nReactDOM.render(\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}